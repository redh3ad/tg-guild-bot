"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.backCommand = exports.navigationCommand = exports.guidesCommand = exports.menuCommand = void 0;
const grammy_1 = require("grammy");
const menuKeyboard = new grammy_1.InlineKeyboard()
    .text('–ì–∞–π–¥—ã', 'guides')
    .row()
    .text('–ù–∞–≤–∏–≥–∞—Ü–∏—è', 'navigation')
    .row()
    .url('–°–∏–º—É–ª—è—Ç–æ—Ä –∞—Å—Ç—Ä–æ–∑–∞–ª–∞üé∞', 'https://t.me/c/1543899602/330969');
const guidesKeyboard = new grammy_1.InlineKeyboard()
    .url('–ë–æ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–æ–≤ –≤–æ–∑–º–µ—â–µ–Ω–∏—è', 'https://t.me/AFKArenaHelper_bot')
    .row()
    .url('–ö–∞–Ω–∞–ª —Å –Ω–∞—à–∏–º–∏ –≥–∞–π–¥–∞–º–∏', 'https://t.me/no9bD')
    .row()
    .url('–ì–∞–π–¥—ã –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü–µ', 'https://docs.google.com/spreadsheets/d/1vQAVmmKoshyyrR68OGFBqE1ddoy2emqeSZmNr-Md0dA/edit?usp=sharing')
    .row()
    .url('–¢–∏—Ä-–ª–∏—Å—Ç –≥–µ—Ä–æ–µ–≤', 'https://docs.google.com/spreadsheets/d/14JyRBKyw6tKKtb_fYpxVJWOpaN6g28TilJXLTpQQY50/edit#gid=0')
    .row()
    .text('–ù–∞–∑–∞–¥', 'back');
const navigationKeyboard = new grammy_1.InlineKeyboard()
    .url('–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –û—Ö–æ—Ç–µ', 'https://t.me/c/1543899602/158568/249646')
    .row()
    .url('–ü–∞—á–∫–∏ –ö–ö, –ü–ú, –ò–ú –∏ –†–∞–∑–ª–æ–º–∞', 'https://t.me/c/1543899602/149922/204495')
    .row()
    .url('–í–æ–ø—Ä–æ—Å—ã –ø–æ –∏–≥—Ä–µ', 'https://t.me/c/1543899602/170976')
    .row()
    .text('–ù–∞–∑–∞–¥', 'back');
const menuCommand = async (ctx, bot) => {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é:', {
        reply_markup: menuKeyboard,
    });
};
exports.menuCommand = menuCommand;
const guidesCommand = async (ctx) => {
    await ctx.editMessageText('–ì–∞–π–¥—ã –∏ –∫–æ–¥—ã:', {
        reply_markup: guidesKeyboard,
    });
    await ctx.answerCallbackQuery();
};
exports.guidesCommand = guidesCommand;
const navigationCommand = async (ctx) => {
    await ctx.editMessageText('–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≥—Ä—É–ø–ø–µ:', {
        reply_markup: navigationKeyboard,
    });
    await ctx.answerCallbackQuery();
};
exports.navigationCommand = navigationCommand;
const backCommand = async (ctx) => {
    await ctx.editMessageText('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é:', {
        reply_markup: menuKeyboard,
    });
    await ctx.answerCallbackQuery();
};
exports.backCommand = backCommand;
